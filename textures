import os
import pygame
import math

size = width, height = 500, 500

COUNT_COIN = 8

class Texture_Block(pygame.sprite.Sprite):
    def __init__(self, pos):
        super().__init__(blocks, textures_spr)
        self.image = pygame.Surface((20, 20))
        pygame.draw.rect(self.image, (71, 74, 81), (0, 0, 20, 20))
        self.rect = pygame.Rect(0, 0, 20, 20)
        self.rect.x = pos[0]
        self.rect.y = pos[1]        
   
        
class Texture_Back(pygame.sprite.Sprite):
    def __init__(self, pos):
        super().__init__(textures_spr)
        self.image = pygame.Surface((20, 20))
        pygame.draw.rect(self.image, (0, 128, 255), (0, 0, 20, 20))
        self.rect = pygame.Rect(0, 0, 20, 20)
        self.rect.x = pos[0]
        self.rect.y = pos[1]
 
        
class Texture_Coin(pygame.sprite.Sprite):
    def __init__(self, pos):
        super().__init__(coins, textures_spr)
        self.image = pygame.Surface((20, 20))
        pygame.draw.rect(self.image, (255, 255, 0), (0, 0, 20, 20))
        self.rect = pygame.Rect(0, 0, 20, 20)
        self.rect.x = pos[0]
        self.rect.y = pos[1]
        
textures_spr = pygame.sprite.Group()
blocks = pygame.sprite.Group()
coins = pygame.sprite.Group()

def load_level(filename):
    with open('data/' + filename + '.txt', 'r') as mapFile:
        level_map = [line.strip() for line in mapFile]
    return level_map

textrs = load_level('level')

def load_map(level_map):
    for i in range(25):
        for j in range(25):
            if level_map[i][j] == '1':
                Texture_Back((j*20, i*20))
                
            elif level_map[i][j] == '2':
                Texture_Coin((j*20, i*20))
                
            else:
                Texture_Block((j*20, i*20))
